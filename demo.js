(() => {
  // dist/src/props.js
  var CSSNamingOrder = [
    { preview: true, properties: ["display"] },
    { preview: true, properties: ["position"] },
    { replacement: "moved", properties: ["left", "right", "top", "bottom"] },
    { properties: ["x", "y", "z-index"] },
    { properties: ["zoom"] },
    { replacement: "colored", properties: [
      "background-color",
      "-webkit-background-color",
      "color",
      "color-adjust",
      "-webkit-color-correction",
      "-apple-color-filter",
      "color-interpolation",
      "color-interpolation-filters",
      "color-profile",
      "color-rendering",
      "color-scheme"
    ] },
    { replacement: "border", properties: [
      "border",
      "-webkit-border-after-color",
      "-webkit-border-after-style",
      "-webkit-border-after",
      "-webkit-border-after-width",
      "-webkit-border-before-color",
      "-webkit-border-before-style",
      "-webkit-border-before",
      "-webkit-border-before-width",
      "border-block",
      "border-block-color",
      "border-block-end",
      "border-block-end-color",
      "border-block-end-style",
      "border-block-end-width",
      "border-block-start",
      "border-block-start-color",
      "border-block-start-style",
      "border-block-start-width",
      "border-block-style",
      "border-block-width",
      "border-bottom",
      "border-bottom-color",
      "-moz-border-bottom-colors",
      "border-bottom-left-radius",
      "-webkit-border-bottom-left-radius",
      "border-bottom-right-radius",
      "-webkit-border-bottom-right-radius",
      "border-bottom-style",
      "border-bottom-width",
      "border-boundary",
      "border-collapse",
      "border-color",
      "-moz-border-end-color",
      "-webkit-border-end-color",
      "border-end-end-radius",
      "-moz-border-end",
      "border-end-start-radius",
      "-moz-border-end-style",
      "-webkit-border-end-style",
      "-webkit-border-end",
      "-moz-border-end-width",
      "-webkit-border-end-width",
      "-webkit-border-fit",
      "-webkit-border-horizontal-spacing",
      "border-image",
      "-moz-border-image",
      "-o-border-image",
      "border-image-outset",
      "-webkit-border-image-outset",
      "border-image-repeat",
      "-webkit-border-image-repeat",
      "border-image-slice",
      "-webkit-border-image-slice",
      "border-image-source",
      "-webkit-border-image-source",
      "-webkit-border-image",
      "border-image-width",
      "-webkit-border-image-width",
      "border-inline",
      "border-inline-color",
      "border-inline-end",
      "border-inline-end-color",
      "border-inline-end-style",
      "border-inline-end-width",
      "border-inline-start",
      "border-inline-start-color",
      "border-inline-start-style",
      "border-inline-start-width",
      "border-inline-style",
      "border-inline-width",
      "border-left",
      "border-left-color",
      "-moz-border-left-colors",
      "border-left-style",
      "border-left-width",
      "border-radius",
      "-moz-border-radius-bottomleft",
      "-moz-border-radius-bottomright",
      "-moz-border-radius",
      "-moz-border-radius-topleft",
      "-moz-border-radius-topright",
      "-webkit-border-radius",
      "border-right",
      "border-right-color",
      "-moz-border-right-colors",
      "border-right-style",
      "border-right-width",
      "border-spacing",
      "-moz-border-start-color",
      "-webkit-border-start-color",
      "border-start-end-radius",
      "-moz-border-start",
      "border-start-start-radius",
      "-moz-border-start-style",
      "-webkit-border-start-style",
      "-webkit-border-start",
      "-moz-border-start-width",
      "-webkit-border-start-width",
      "border-style",
      "border-top",
      "border-top-color",
      "-moz-border-top-colors",
      "border-top-left-radius",
      "-webkit-border-top-left-radius",
      "border-top-right-radius",
      "-webkit-border-top-right-radius",
      "border-top-style",
      "border-top-width",
      "-webkit-border-vertical-spacing",
      "border-width"
    ] },
    { replacement: "animated", properties: [
      "animation",
      "animation-composition",
      "animation-delay",
      "animation-delay-end",
      "-moz-animation-delay",
      "-ms-animation-delay",
      "animation-delay-start",
      "-webkit-animation-delay",
      "animation-direction",
      "-moz-animation-direction",
      "-ms-animation-direction",
      "-webkit-animation-direction",
      "animation-duration",
      "-moz-animation-duration",
      "-ms-animation-duration",
      "-webkit-animation-duration",
      "animation-fill-mode",
      "-moz-animation-fill-mode",
      "-ms-animation-fill-mode",
      "-webkit-animation-fill-mode",
      "animation-iteration-count",
      "-moz-animation-iteration-count",
      "-ms-animation-iteration-count",
      "-webkit-animation-iteration-count",
      "-moz-animation",
      "-ms-animation",
      "animation-name",
      "-moz-animation-name",
      "-ms-animation-name",
      "-webkit-animation-name",
      "animation-play-state",
      "-moz-animation-play-state",
      "-ms-animation-play-state",
      "-webkit-animation-play-state",
      "animation-range",
      "animation-range-end",
      "animation-range-start",
      "animation-timing-function",
      "-moz-animation-timing-function",
      "-ms-animation-timing-function",
      "-webkit-animation-timing-function",
      "-webkit-animation-trigger",
      "-webkit-animation"
    ] },
    { replacement: "filled", properties: [
      "background",
      "background-attachment",
      "-webkit-background-attachment",
      "background-blend-mode",
      "background-clip",
      "-moz-background-clip",
      "-webkit-background-clip",
      "-webkit-background-composite",
      "background-image",
      "-webkit-background-image",
      "-moz-background-inline-policy",
      "background-origin",
      "-moz-background-origin",
      "-webkit-background-origin",
      "background-position",
      "-webkit-background-position",
      "background-position-x",
      "-webkit-background-position-x",
      "background-position-y",
      "-webkit-background-position-y",
      "background-repeat",
      "-webkit-background-repeat",
      "background-repeat-x",
      "background-repeat-y",
      "background-size",
      "-moz-background-size",
      "-webkit-background-size",
      "-webkit-background"
    ] },
    { replacement: "wrapped", properties: [
      "word-wrap",
      "wrap-after",
      "wrap-before",
      "wrap-flow",
      "-ms-wrap-flow",
      "-webkit-wrap-flow",
      "wrap-inside",
      "-ms-wrap-margin",
      "-webkit-wrap-margin",
      "-webkit-wrap-padding",
      "-webkit-wrap-shape-inside",
      "-webkit-wrap-shape-outside",
      "wrap-through",
      "-ms-wrap-through",
      "-webkit-wrap-through",
      "-webkit-wrap"
    ] },
    { replacement: "epub", properties: [
      "-epub-caption-side",
      "-epub-hyphens",
      "-epub-text-combine",
      "-epub-text-emphasis",
      "-epub-text-emphasis-color",
      "-epub-text-emphasis-style",
      "-epub-text-orientation",
      "-epub-text-transform",
      "-epub-word-break",
      "-epub-writing-mode",
      "epub-caption-side",
      "epub-hyphens",
      "epub-text-combine",
      "epub-text-emphasis",
      "epub-text-emphasis-color",
      "epub-text-emphasis-style",
      "epub-text-orientation",
      "epub-text-transform",
      "epub-word-break",
      "epub-writing-mode"
    ] },
    { replacement: "box", properties: [
      "-moz-box-align",
      "-webkit-box-align",
      "box-decoration-break",
      "-webkit-box-decoration-break",
      "-moz-box-direction",
      "-webkit-box-direction",
      "-webkit-box-flex-group",
      "-moz-box-flex",
      "-webkit-box-flex",
      "-webkit-box-lines",
      "-moz-box-ordinal-group",
      "-webkit-box-ordinal-group",
      "-moz-box-orient",
      "-webkit-box-orient",
      "-moz-box-pack",
      "-webkit-box-pack",
      "-webkit-box-reflect",
      "box-shadow",
      "-moz-box-shadow",
      "-webkit-box-shadow",
      "box-sizing",
      "-moz-box-sizing",
      "-webkit-box-sizing",
      "box-snap"
    ] },
    { replacement: "text", properties: [
      "font",
      "font-display",
      "font-family",
      "font-feature-settings",
      "-moz-font-feature-settings",
      "-ms-font-feature-settings",
      "-webkit-font-feature-settings",
      "font-kerning",
      "-webkit-font-kerning",
      "font-language-override",
      "-moz-font-language-override",
      "font-optical-sizing",
      "font-palette",
      "font-size",
      "font-size-adjust",
      "-webkit-font-size-delta",
      "-webkit-font-smoothing",
      "font-stretch",
      "font-style",
      "font-synthesis",
      "font-synthesis-small-caps",
      "font-synthesis-style",
      "font-synthesis-weight",
      "font-variant",
      "font-variant-alternates",
      "font-variant-caps",
      "font-variant-east-asian",
      "font-variant-emoji",
      "font-variant-ligatures",
      "-webkit-font-variant-ligatures",
      "font-variant-numeric",
      "font-variant-position",
      "font-variation-settings",
      "font-weight",
      "text-align",
      "text-align-all",
      "text-align-last",
      "-moz-text-align-last",
      "text-anchor"
    ] },
    { replacement: "decorated", properties: [
      "text-autospace",
      "-moz-text-blink",
      "-ms-text-combine-horizontal",
      "text-combine-upright",
      "-webkit-text-combine",
      "text-decoration",
      "text-decoration-blink",
      "text-decoration-color",
      "-moz-text-decoration-color",
      "-webkit-text-decoration-color",
      "text-decoration-line",
      "-moz-text-decoration-line",
      "text-decoration-line-through",
      "-webkit-text-decoration-line",
      "text-decoration-none",
      "text-decoration-overline",
      "text-decoration-skip",
      "text-decoration-skip-box",
      "text-decoration-skip-ink",
      "text-decoration-skip-inset",
      "text-decoration-skip-self",
      "text-decoration-skip-spaces",
      "-webkit-text-decoration-skip",
      "text-decoration-style",
      "-moz-text-decoration-style",
      "-webkit-text-decoration-style",
      "text-decoration-thickness",
      "text-decoration-trim",
      "text-decoration-underline",
      "-webkit-text-decoration",
      "-webkit-text-decorations-in-effect",
      "text-edge",
      "text-emphasis",
      "text-emphasis-color",
      "-webkit-text-emphasis-color",
      "text-emphasis-position",
      "-webkit-text-emphasis-position",
      "text-emphasis-skip",
      "text-emphasis-style",
      "-webkit-text-emphasis-style",
      "-webkit-text-emphasis",
      "-webkit-text-fill-color",
      "text-group-align",
      "text-indent",
      "text-justify",
      "text-justify-trim",
      "text-kashida",
      "text-kashida-space",
      "text-line-through",
      "text-line-through-color",
      "text-line-through-mode",
      "text-line-through-style",
      "text-line-through-width",
      "text-orientation",
      "-webkit-text-orientation",
      "text-overflow",
      "text-overline",
      "text-overline-color",
      "text-overline-mode",
      "text-overline-style",
      "text-overline-width",
      "text-rendering",
      "-webkit-text-security",
      "text-shadow",
      "text-size-adjust",
      "-moz-text-size-adjust",
      "-ms-text-size-adjust",
      "-webkit-text-size-adjust",
      "text-space-collapse",
      "text-space-trim",
      "text-spacing",
      "-webkit-text-stroke-color",
      "-webkit-text-stroke",
      "-webkit-text-stroke-width",
      "text-transform",
      "text-underline",
      "text-underline-color",
      "text-underline-mode",
      "text-underline-offset",
      "text-underline-position",
      "-webkit-text-underline-position",
      "text-underline-style",
      "text-underline-width",
      "text-wrap",
      "-webkit-text-zoom"
    ] },
    { replacement: "overflow", properties: [
      "overflow",
      "overflow-anchor",
      "overflow-block",
      "overflow-clip-margin",
      "overflow-clip-margin-block",
      "overflow-clip-margin-block-end",
      "overflow-clip-margin-block-start",
      "overflow-clip-margin-bottom",
      "overflow-clip-margin-inline",
      "overflow-clip-margin-inline-end",
      "overflow-clip-margin-inline-start",
      "overflow-clip-margin-left",
      "overflow-clip-margin-right",
      "overflow-clip-margin-top",
      "overflow-inline",
      "-webkit-overflow-scrolling",
      "-ms-overflow-style",
      "overflow-wrap",
      "overflow-x",
      "overflow-y"
    ] },
    { replacement: "filled", properties: [
      "fill",
      "fill-break",
      "fill-color",
      "fill-image",
      "fill-opacity",
      "fill-origin",
      "fill-position",
      "fill-repeat",
      "fill-rule",
      "fill-size"
    ] },
    { replacement: "break", properties: [
      "break-after",
      "break-before",
      "break-inside",
      "-webkit-column-break-after",
      "-webkit-column-break-before",
      "-webkit-column-break-inside"
    ] },
    { replacement: "column", properties: [
      "-webkit-column-axis",
      "column-count",
      "-moz-column-count",
      "-webkit-column-count",
      "column-fill",
      "-moz-column-fill",
      "-webkit-column-fill",
      "column-gap",
      "-moz-column-gap",
      "-webkit-column-gap",
      "column-progression",
      "-webkit-column-progression",
      "column-rule",
      "column-rule-color",
      "-moz-column-rule-color",
      "-webkit-column-rule-color",
      "-moz-column-rule",
      "column-rule-style",
      "-moz-column-rule-style",
      "-webkit-column-rule-style",
      "-webkit-column-rule",
      "column-rule-width",
      "-moz-column-rule-width",
      "-webkit-column-rule-width",
      "column-span",
      "-moz-column-span",
      "-webkit-column-span",
      "column-width",
      "-moz-column-width",
      "-webkit-column-width",
      "columns",
      "-moz-columns",
      "-webkit-columns"
    ] },
    { replacement: "contain", properties: [
      "contain",
      "contain-intrinsic-block-size",
      "contain-intrinsic-height",
      "contain-intrinsic-inline-size",
      "contain-intrinsic-size",
      "contain-intrinsic-width"
    ] },
    { replacement: "container", properties: [
      "container",
      "container-name",
      "container-type"
    ] },
    { replacement: "flexed", properties: [
      "flex",
      "-ms-flex-align",
      "-webkit-flex-align",
      "flex-basis",
      "-webkit-flex-basis",
      "flex-direction",
      "-ms-flex-direction",
      "-webkit-flex-direction",
      "flex-flow",
      "-ms-flex-flow",
      "-webkit-flex-flow",
      "flex-grow",
      "-webkit-flex-grow",
      "-ms-flex-item-align",
      "-webkit-flex-item-align",
      "-ms-flex-line-pack",
      "-webkit-flex-line-pack",
      "-ms-flex",
      "-ms-flex-negative",
      "-ms-flex-order",
      "-webkit-flex-order",
      "-ms-flex-pack",
      "-webkit-flex-pack",
      "-ms-flex-positive",
      "-ms-flex-preferred-size",
      "flex-shrink",
      "-webkit-flex-shrink",
      "-webkit-flex",
      "flex-wrap",
      "-ms-flex-wrap",
      "-webkit-flex-wrap"
    ] },
    { replacement: "stroke", properties: [
      "stroke",
      "stroke-align",
      "stroke-alignment",
      "stroke-break",
      "stroke-color",
      "stroke-dash-corner",
      "stroke-dash-justify",
      "stroke-dashadjust",
      "stroke-dasharray",
      "stroke-dashcorner",
      "stroke-dashoffset",
      "stroke-image",
      "stroke-linecap",
      "stroke-linejoin",
      "stroke-miterlimit",
      "stroke-opacity",
      "stroke-origin",
      "stroke-position",
      "stroke-repeat",
      "stroke-size",
      "stroke-width"
    ] },
    { replacement: "grid", properties: [
      "grid",
      "-webkit-grid-after",
      "grid-area",
      "grid-auto-columns",
      "-webkit-grid-auto-columns",
      "grid-auto-flow",
      "-webkit-grid-auto-flow",
      "grid-auto-rows",
      "-webkit-grid-auto-rows",
      "-webkit-grid-before",
      "grid-column",
      "-ms-grid-column-align",
      "grid-column-end",
      "grid-column-gap",
      "-ms-grid-column",
      "-ms-grid-column-span",
      "grid-column-start",
      "-webkit-grid-column",
      "-ms-grid-columns",
      "-webkit-grid-columns",
      "-webkit-grid-end",
      "grid-gap",
      "grid-row",
      "-ms-grid-row-align",
      "grid-row-end",
      "grid-row-gap",
      "-ms-grid-row",
      "-ms-grid-row-span",
      "grid-row-start",
      "-webkit-grid-row",
      "-ms-grid-rows",
      "-webkit-grid-rows",
      "-webkit-grid-start",
      "grid-template",
      "grid-template-areas",
      "grid-template-columns",
      "grid-template-rows"
    ] },
    { replacement: "inset", properties: [
      "inset",
      "inset-block",
      "inset-block-end",
      "inset-block-start",
      "inset-inline",
      "inset-inline-end",
      "inset-inline-start"
    ] },
    { replacement: "word-boundary", properties: [
      "word-boundary-detection",
      "word-boundary-expansion"
    ] },
    { replacement: "word-spaced", properties: [
      "word-break",
      "word-spacing"
    ] },
    { replacement: "voice", properties: [
      "voice-balance",
      "voice-duration",
      "voice-family",
      "voice-pitch",
      "voice-range",
      "voice-rate",
      "voice-stress",
      "voice-volume"
    ] },
    { replacement: "view-timeline", properties: [
      "view-timeline",
      "view-timeline-axis",
      "view-timeline-inset",
      "view-timeline-name",
      "view-transition-name"
    ] },
    { replacement: "transitioning", properties: [
      "transition",
      "transition-delay",
      "-moz-transition-delay",
      "-ms-transition-delay",
      "-o-transition-delay",
      "-webkit-transition-delay",
      "transition-duration",
      "-moz-transition-duration",
      "-ms-transition-duration",
      "-o-transition-duration",
      "-webkit-transition-duration",
      "-moz-transition",
      "-ms-transition",
      "-o-transition",
      "transition-property",
      "-moz-transition-property",
      "-ms-transition-property",
      "-o-transition-property",
      "-webkit-transition-property",
      "transition-timing-function",
      "-moz-transition-timing-function",
      "-ms-transition-timing-function",
      "-o-transition-timing-function",
      "-webkit-transition-timing-function",
      "-webkit-transition"
    ] },
    { replacement: "transformed", properties: [
      "transform",
      "transform-box",
      "-moz-transform",
      "-ms-transform",
      "-o-transform",
      "transform-origin",
      "-moz-transform-origin",
      "-ms-transform-origin",
      "-o-transform-origin",
      "-webkit-transform-origin",
      "transform-origin-x",
      "-webkit-transform-origin-x",
      "transform-origin-y",
      "-webkit-transform-origin-y",
      "transform-origin-z",
      "-webkit-transform-origin-z",
      "transform-style",
      "-moz-transform-style",
      "-ms-transform-style",
      "-webkit-transform-style",
      "-webkit-transform"
    ] },
    { replacement: "snapped", properties: [
      "scroll-snap-align",
      "scroll-snap-coordinate",
      "-webkit-scroll-snap-coordinate",
      "scroll-snap-destination",
      "-webkit-scroll-snap-destination",
      "scroll-snap-margin",
      "scroll-snap-margin-bottom",
      "scroll-snap-margin-left",
      "scroll-snap-margin-right",
      "scroll-snap-margin-top",
      "scroll-snap-points-x",
      "-ms-scroll-snap-points-x",
      "-webkit-scroll-snap-points-x",
      "scroll-snap-points-y",
      "-ms-scroll-snap-points-y",
      "-webkit-scroll-snap-points-y",
      "scroll-snap-stop",
      "scroll-snap-type",
      "-ms-scroll-snap-type",
      "-webkit-scroll-snap-type",
      "scroll-snap-type-x",
      "scroll-snap-type-y",
      "-ms-scroll-snap-x",
      "-ms-scroll-snap-y"
    ] },
    { replacement: "scroll-boundaries", properties: [
      "scroll-margin",
      "scroll-margin-block",
      "scroll-margin-block-end",
      "scroll-margin-block-start",
      "scroll-margin-bottom",
      "scroll-margin-inline",
      "scroll-margin-inline-end",
      "scroll-margin-inline-start",
      "scroll-margin-left",
      "scroll-margin-right",
      "scroll-margin-top",
      "scroll-padding",
      "scroll-padding-block",
      "scroll-padding-block-end",
      "scroll-padding-block-start",
      "scroll-padding-bottom",
      "scroll-padding-inline",
      "scroll-padding-inline-end",
      "scroll-padding-inline-start",
      "scroll-padding-left",
      "scroll-padding-right",
      "scroll-padding-top"
    ] },
    { replacement: "spaced", properties: [
      "margin",
      "-webkit-margin-after-collapse",
      "-webkit-margin-after",
      "-webkit-margin-before-collapse",
      "-webkit-margin-before",
      "margin-block",
      "margin-block-end",
      "margin-block-start",
      "margin-bottom",
      "-webkit-margin-bottom-collapse",
      "margin-break",
      "-webkit-margin-collapse",
      "-moz-margin-end",
      "-webkit-margin-end",
      "margin-inline",
      "margin-inline-end",
      "margin-inline-start",
      "margin-left",
      "margin-right",
      "-moz-margin-start",
      "-webkit-margin-start",
      "margin-top",
      "-webkit-margin-top-collapse",
      "margin-trim"
    ] },
    { replacement: "extended", properties: [
      "padding",
      "-webkit-padding-after",
      "-webkit-padding-before",
      "padding-block",
      "padding-block-end",
      "padding-block-start",
      "padding-bottom",
      "-moz-padding-end",
      "-webkit-padding-end",
      "padding-inline",
      "padding-inline-end",
      "padding-inline-start",
      "padding-left",
      "padding-right",
      "-moz-padding-start",
      "-webkit-padding-start",
      "padding-top"
    ] },
    { replacement: "layout", properties: [
      "layout-flow",
      "layout-grid",
      "layout-grid-char",
      "layout-grid-line",
      "layout-grid-mode",
      "layout-grid-type",
      "layout-order"
    ] },
    { replacement: "styled", properties: [
      "-webkit-user-drag",
      "-moz-user-focus",
      "-moz-user-input",
      "-moz-user-modify",
      "-webkit-user-modify",
      "user-select",
      "-moz-user-select",
      "-ms-user-select",
      "-webkit-user-select",
      "user-zoom",
      "-internal-text-autosizing-status",
      "accelerator",
      "accent-color",
      "-wap-accesskey",
      "additive-symbols",
      "align-content",
      "-webkit-align-content",
      "align-items",
      "-webkit-align-items",
      "align-self",
      "-webkit-align-self",
      "alignment-baseline",
      "all",
      "-webkit-alt",
      "app-region",
      "-webkit-app-region",
      "appearance",
      "-moz-appearance",
      "-webkit-appearance",
      "ascent-override",
      "aspect-ratio",
      "-webkit-aspect-ratio",
      "audio-level",
      "azimuth",
      "backdrop-filter",
      "-webkit-backdrop-filter",
      "backface-visibility",
      "-moz-backface-visibility",
      "-ms-backface-visibility",
      "-webkit-backface-visibility",
      "base-palette",
      "baseline-shift",
      "baseline-source",
      "behavior",
      "-moz-binding",
      "block-ellipsis",
      "-ms-block-progression",
      "block-size",
      "block-step",
      "block-step-align",
      "block-step-insert",
      "block-step-round",
      "block-step-size",
      "bookmark-label",
      "bookmark-level",
      "bookmark-state",
      "buffered-rendering",
      "caption-side",
      "caret",
      "caret-color",
      "caret-shape",
      "chains",
      "clear",
      "clip",
      "clip-path",
      "-webkit-clip-path",
      "clip-rule",
      "-webkit-composition-fill-color",
      "-webkit-composition-frame-color",
      "content",
      "content-visibility",
      "-ms-content-zoom-chaining",
      "-ms-content-zoom-limit-max",
      "-ms-content-zoom-limit-min",
      "-ms-content-zoom-limit",
      "-ms-content-zoom-snap",
      "-ms-content-zoom-snap-points",
      "-ms-content-zoom-snap-type",
      "-ms-content-zooming",
      "continue",
      "counter-increment",
      "counter-reset",
      "counter-set",
      "cue",
      "cue-after",
      "cue-before",
      "cursor",
      "-webkit-cursor-visibility",
      "cx",
      "cy",
      "d",
      "-apple-dashboard-region",
      "-webkit-dashboard-region",
      "descent-override",
      "direction",
      "display",
      "display-align",
      "dominant-baseline",
      "elevation",
      "empty-cells",
      "enable-background",
      "fallback",
      "filter",
      "-ms-filter",
      "-webkit-filter",
      "float",
      "float-defer",
      "-moz-float-edge",
      "float-offset",
      "float-reference",
      "flood-color",
      "flood-opacity",
      "flow",
      "flow-from",
      "-ms-flow-from",
      "-webkit-flow-from",
      "flow-into",
      "-ms-flow-into",
      "-webkit-flow-into",
      "footnote-display",
      "footnote-policy",
      "-moz-force-broken-image-icon",
      "forced-color-adjust",
      "gap",
      "glyph-orientation-horizontal",
      "glyph-orientation-vertical",
      "hanging-punctuation",
      "height",
      "-ms-high-contrast-adjust",
      "-webkit-highlight",
      "hyphenate-character",
      "-webkit-hyphenate-character",
      "-webkit-hyphenate-limit-after",
      "-webkit-hyphenate-limit-before",
      "hyphenate-limit-chars",
      "-ms-hyphenate-limit-chars",
      "hyphenate-limit-last",
      "hyphenate-limit-lines",
      "-ms-hyphenate-limit-lines",
      "-webkit-hyphenate-limit-lines",
      "hyphenate-limit-zone",
      "-ms-hyphenate-limit-zone",
      "hyphens",
      "-moz-hyphens",
      "-ms-hyphens",
      "-webkit-hyphens",
      "image-orientation",
      "-moz-image-region",
      "image-rendering",
      "image-resolution",
      "-ms-ime-align",
      "ime-mode",
      "inherits",
      "initial-letter",
      "initial-letter-align",
      "-webkit-initial-letter",
      "initial-letter-wrap",
      "initial-value",
      "inline-size",
      "inline-sizing",
      "input-format",
      "-wap-input-format",
      "-wap-input-required",
      "input-security",
      "-ms-interpolation-mode",
      "isolation",
      "justify-content",
      "-webkit-justify-content",
      "justify-items",
      "-webkit-justify-items",
      "justify-self",
      "-webkit-justify-self",
      "kerning",
      "leading-trim",
      "left",
      "letter-spacing",
      "lighting-color",
      "-webkit-line-align",
      "-webkit-line-box-contain",
      "line-break",
      "-webkit-line-break",
      "line-clamp",
      "-webkit-line-clamp",
      "line-gap-override",
      "line-grid",
      "-webkit-line-grid-snap",
      "-webkit-line-grid",
      "line-height",
      "line-height-step",
      "line-increment",
      "line-padding",
      "line-snap",
      "-webkit-line-snap",
      "-o-link",
      "-o-link-source",
      "list-style",
      "list-style-image",
      "list-style-position",
      "list-style-type",
      "-webkit-locale",
      "-webkit-logical-height",
      "-webkit-logical-width",
      "marker",
      "marker-end",
      "marker-knockout-left",
      "marker-knockout-right",
      "marker-mid",
      "marker-offset",
      "marker-pattern",
      "marker-segment",
      "marker-side",
      "marker-start",
      "marks",
      "-wap-marquee-dir",
      "-webkit-marquee-direction",
      "-webkit-marquee-increment",
      "-wap-marquee-loop",
      "-webkit-marquee-repetition",
      "-wap-marquee-speed",
      "-webkit-marquee-speed",
      "-wap-marquee-style",
      "-webkit-marquee-style",
      "-webkit-marquee",
      "mask",
      "-webkit-mask-attachment",
      "mask-border",
      "mask-border-mode",
      "mask-border-outset",
      "mask-border-repeat",
      "mask-border-slice",
      "mask-border-source",
      "mask-border-width",
      "-webkit-mask-box-image-outset",
      "-webkit-mask-box-image-repeat",
      "-webkit-mask-box-image-slice",
      "-webkit-mask-box-image-source",
      "-webkit-mask-box-image",
      "-webkit-mask-box-image-width",
      "mask-clip",
      "-webkit-mask-clip",
      "mask-composite",
      "-webkit-mask-composite",
      "mask-image",
      "-webkit-mask-image",
      "mask-mode",
      "mask-origin",
      "-webkit-mask-origin",
      "mask-position",
      "-webkit-mask-position",
      "mask-position-x",
      "-webkit-mask-position-x",
      "mask-position-y",
      "-webkit-mask-position-y",
      "mask-repeat",
      "-webkit-mask-repeat",
      "-webkit-mask-repeat-x",
      "-webkit-mask-repeat-y",
      "mask-size",
      "-webkit-mask-size",
      "mask-source-type",
      "-webkit-mask-source-type",
      "mask-type",
      "-webkit-mask",
      "-webkit-match-nearest-mail-blockquote-color",
      "math-depth",
      "math-shift",
      "math-style",
      "max-block-size",
      "max-height",
      "max-inline-size",
      "max-lines",
      "-webkit-max-logical-height",
      "-webkit-max-logical-width",
      "max-width",
      "max-zoom",
      "min-block-size",
      "min-height",
      "min-inline-size",
      "min-intrinsic-sizing",
      "-webkit-min-logical-height",
      "-webkit-min-logical-width",
      "min-width",
      "min-zoom",
      "mix-blend-mode",
      "motion",
      "motion-offset",
      "motion-path",
      "motion-rotation",
      "nav-down",
      "nav-index",
      "nav-left",
      "nav-right",
      "nav-up",
      "-webkit-nbsp-mode",
      "negative",
      "object-fit",
      "-o-object-fit",
      "object-position",
      "-o-object-position",
      "object-view-box",
      "offset",
      "offset-anchor",
      "offset-block-end",
      "offset-block-start",
      "offset-distance",
      "offset-inline-end",
      "offset-inline-start",
      "offset-path",
      "offset-position",
      "offset-rotate",
      "offset-rotation",
      "opacity",
      "-moz-opacity",
      "-webkit-opacity",
      "order",
      "-webkit-order",
      "-moz-orient",
      "orientation",
      "orphans",
      "-moz-osx-font-smoothing",
      "outline",
      "outline-color",
      "-moz-outline-color",
      "-moz-outline",
      "outline-offset",
      "-moz-outline-offset",
      "-moz-outline-radius-bottomleft",
      "-moz-outline-radius-bottomright",
      "-moz-outline-radius",
      "-moz-outline-radius-topleft",
      "-moz-outline-radius-topright",
      "outline-style",
      "-moz-outline-style",
      "outline-width",
      "-moz-outline-width",
      "override-colors",
      "overscroll-behavior",
      "overscroll-behavior-block",
      "overscroll-behavior-inline",
      "overscroll-behavior-x",
      "overscroll-behavior-y",
      "pad",
      "page",
      "page-break-after",
      "page-break-before",
      "page-break-inside",
      "page-orientation",
      "paint-order",
      "pause",
      "pause-after",
      "pause-before",
      "-apple-pay-button-style",
      "-apple-pay-button-type",
      "pen-action",
      "perspective",
      "-moz-perspective",
      "-ms-perspective",
      "perspective-origin",
      "-moz-perspective-origin",
      "-ms-perspective-origin",
      "-webkit-perspective-origin",
      "perspective-origin-x",
      "-webkit-perspective-origin-x",
      "perspective-origin-y",
      "-webkit-perspective-origin-y",
      "-webkit-perspective",
      "pitch",
      "pitch-range",
      "place-content",
      "place-items",
      "place-self",
      "play-during",
      "pointer-events",
      "prefix",
      "print-color-adjust",
      "-webkit-print-color-adjust",
      "property-name",
      "quotes",
      "r",
      "range",
      "reading-order",
      "-webkit-region-break-after",
      "-webkit-region-break-before",
      "-webkit-region-break-inside",
      "region-fragment",
      "-webkit-region-fragment",
      "-webkit-region-overflow",
      "resize",
      "rest",
      "rest-after",
      "rest-before",
      "richness",
      "right",
      "rotate",
      "row-gap",
      "-webkit-rtl-ordering",
      "ruby-align",
      "ruby-merge",
      "ruby-overhang",
      "ruby-position",
      "-webkit-ruby-position",
      "running",
      "rx",
      "ry",
      "scale",
      "scroll-behavior",
      "-ms-scroll-chaining",
      "-ms-scroll-limit",
      "-ms-scroll-limit-x-max",
      "-ms-scroll-limit-x-min",
      "-ms-scroll-limit-y-max",
      "-ms-scroll-limit-y-min",
      "-ms-scroll-rails",
      "scroll-timeline",
      "scroll-timeline-axis",
      "scroll-timeline-name",
      "-ms-scroll-translation",
      "scrollbar-arrow-color",
      "scrollbar-base-color",
      "scrollbar-color",
      "scrollbar-dark-shadow-color",
      "scrollbar-darkshadow-color",
      "scrollbar-face-color",
      "scrollbar-gutter",
      "scrollbar-highlight-color",
      "scrollbar-shadow-color",
      "scrollbar-track-color",
      "scrollbar-width",
      "scrollbar3d-light-color",
      "scrollbar3dlight-color",
      "shape-image-threshold",
      "-webkit-shape-image-threshold",
      "shape-inside",
      "-webkit-shape-inside",
      "shape-margin",
      "-webkit-shape-margin",
      "shape-outside",
      "-webkit-shape-outside",
      "-webkit-shape-padding",
      "shape-rendering",
      "size",
      "size-adjust",
      "snap-height",
      "solid-color",
      "solid-opacity",
      "spatial-navigation-action",
      "spatial-navigation-contain",
      "spatial-navigation-function",
      "speak",
      "speak-as",
      "speak-header",
      "speak-numeral",
      "speak-punctuation",
      "speech-rate",
      "-moz-stack-sizing",
      "stop-color",
      "stop-opacity",
      "stress",
      "string-set",
      "suffix",
      "supported-color-schemes",
      "-webkit-svg-shadow",
      "symbols",
      "syntax",
      "system",
      "tab-size",
      "-moz-tab-size",
      "-o-tab-size",
      "-o-table-baseline",
      "table-layout",
      "-webkit-tap-highlight-color",
      "top",
      "touch-action",
      "touch-action-delay",
      "-ms-touch-action",
      "-webkit-touch-callout",
      "-ms-touch-select",
      "-apple-trailing-word",
      "translate",
      "uc-alt-skin",
      "uc-skin",
      "unicode-bidi",
      "unicode-range",
      "vector-effect",
      "vertical-align",
      "viewport-fill",
      "viewport-fill-opacity",
      "viewport-fit",
      "visibility",
      "volume",
      "white-space",
      "-webkit-widget-region",
      "widows",
      "width",
      "will-change",
      "-moz-window-dragging",
      "-moz-window-shadow",
      "writing-mode",
      "-webkit-writing-mode"
    ] }
  ];
  var CSSProperties = CSSNamingOrder.map(({ properties }) => properties).flat();

  // dist/src/names.js
  function generateUniqueCSSName(props, i, classNames, className = "") {
    const propNames = Array.from(props.keys());
    for (let i2 = 0, n = CSSNamingOrder.length, k = 0; i2 < n && (k < 2 || classNames.includes(className)) && k < 5; i2++) {
      const order = CSSNamingOrder[i2];
      const name = propNames.find((name2) => order.properties.includes(name2));
      if (name) {
        k++;
        if (order.preview)
          className += props.get(name) + "-";
        else if (order.replacement)
          className += order.replacement + "-";
      }
    }
    classNames.push(className);
    return `${className.slice(0, -1)}-${i + 1}`;
  }

  // dist/src/css.js
  function createCSS(target, i, classNames, prefix = "") {
    let className = generateUniqueCSSName(target.props, i, classNames, prefix + "-");
    target.el.classList.add(className);
    let css = "";
    for (const [name, value] of target.props)
      css += name + ":" + value + ";";
    return `.${className}{${css}}
`;
  }

  // dist/src/element.js
  function getInlineCSS(container, fix = "") {
    return Array.from(takeInlineCSS(container, fix));
  }
  function takeInlineCSS(container, fix = "") {
    const inline = /* @__PURE__ */ new Map();
    for (const property of CSSProperties) {
      const fullname = `${property}${fix ? "-" + fix : ""}`;
      const collection = [...container.querySelectorAll(`[${fullname}]`)];
      if (container.hasAttribute(`${fullname}`))
        collection.push(container);
      for (const element of collection) {
        let styles = inline.get(element);
        if (!styles) {
          styles = /* @__PURE__ */ new Map();
          inline.set(element, styles);
        }
        styles.set(property, element.getAttribute(`${fullname}`));
        element.removeAttribute(`${fullname}`);
      }
    }
    return inline;
  }

  // dist/src/html.js
  var Rules = {
    media: /* @__PURE__ */ new Map(),
    get mediaFixes() {
      return Array.from(Rules.media.keys());
    },
    ref(media) {
      this.media = media;
    },
    set(fix, condition) {
      this.media.set(fix, condition);
    }
  };
  function html(strings, ...values) {
    const html2 = String.raw({ raw: strings }, ...values);
    const document2 = new DOMParser().parseFromString(html2, "text/html");
    if (!document2)
      return "";
    applyInlineCSS(document2);
    return "<!DOCTYPE html>" + document2.head.outerHTML + document2.body.outerHTML;
  }
  function applyInlineCSS(document2) {
    if (!document2)
      return;
    const classNames = ["", ...Rules.mediaFixes];
    const inline = {
      base: getInlineCSS(document2.body),
      rules: Array.from(Rules.media.entries()).map(([fix, condition]) => ({ fix, condition, inlineCSS: getInlineCSS(document2.body, fix) }))
    };
    document2.head.innerHTML += `<style>

        ${inline.base.map(([el, props], i) => createCSS({ el, props }, i, classNames)).join("\n")}

        ${inline.rules.map(({ fix, condition, inlineCSS }) => `@media ${condition} {
` + inlineCSS.map(([el, props], i) => createCSS({ el, props }, i, classNames, fix)).join("\n")).join("\n}\n") + "\n}"}

    </style>`;
  }

  // dist/demo/index.js
  Rules.ref(/* @__PURE__ */ new Map([
    ["narrow", "screen and (min-width: 24em)"],
    ["medium", "screen and (min-width: 48em)"],
    ["wide", "screen and (min-width: 86em)"],
    ["widest", "screen and (min-width: 148em)"]
  ]));
  var frame = document.createElement("iframe");
  document.body.append(frame);
  frame.setAttribute("srcdoc", html`<!DOCTYPE html><html>
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
    </head>
    <body>
        
        <div width="10em" height="10em" background-color="red" 
            background-color-widest="blue"
            background-color-wide="yellow" 
            background-color-medium="green" 
            background-color-narrow="orange">

            Demo
        
        </div>

    </body>
</html>`);
})();
